#!/usr/bin/perl
use Cwd;
$pre_def = $ARGV[0];
$pdn_def = $ARGV[1];
$design = $ARGV[2];
$output_def = $ARGV[3];
$wd = cwd;

##$def_output = "${design}_pdn.def" ;
  print "Input DEF file is $pre_def\n";
  print "PDN special nets DEF file is $pdn_def\n";
  print "Output merged DEF file in current work dir is $output_def\n";


 
if (-e $pre_def) {

  print "Input DEF file is $pre_def\n";
  print "PDN special nets DEF file is $pdn_def\n";
  print "Output merged DEF file in current work dir is $output_def\n";





	open(FP1,$pre_def);
	open(FP3,$pdn_def);
	

	
	open(OP1,">$output_def");
	$flag = 0;
	$vflag = 0;
	@slines = ();
	@slines = ();
	@rlines = ();

  ## to get rows, special nets and vias
	while(<FP3>) {
			if ($_ =~m/^VIAS/) {
				$vflag = 1;

			}

			if ($vflag == 1) {
				push(@vlines,$_);
				##print "$_";
			}
	
			if ($_ =~m/^END VIAS/) {
				$vflag = 0;

			}


			if ($_ =~m/^SPECIALNETS/) {
				$flag = 1;
	
			}
	
	
			if ($flag == 1) {
				if ($_ !~m/^$/) {
	 				push (@slines,$_);
				}
	
			}
	
			if ($_ =~m/^END SPECIALNETS/) {
				$flag = 0;
	
			}

			if ($_ =~m/^ROW/) {
				$rflag = 1;
	
			}
			if ($_ =~m/^END DESIGN/) {
				$rflag = 0;
	
			}	
	
			if ($rflag == 1) {
				if ($_ !~m/^$/) {
	 				push (@rlines,$_);
				}
	
			}




	}
	close(FP3);

	$comp = 0;
	$net = 0;
  $n_flag = 0;
	while(<FP1>) {
		##print "@macro_array\n";
		if ($_ !~m/^$/ ) {
      ##print "$_";
			@cur = split(/\s+/,$_);
			$temp = $cur[2];
			##print "Third element is $cur[2] and macro hash is $macro_hash{$cur[2]} \n";
			if ($_ =~m/^ROW/) {
				##printf OP1 "$_";
        $n_flag = 1;
				##print "Does not match ----- \n";
			}

      if ($n_flag == 0) {
				printf OP1 "$_";
        #print "$_";
      }


      if ($n_flag ==  1 && $_ =~m/^ ;/) {
        #next;
        $n_flag = 0;
      }


    

		}

	if ($_ =~m/^DIEAREA/) {
				##printf OP1 "@vlines";
				foreach $elem0 (@vlines) {
					printf OP1 "$elem0";
	      }
	      foreach $elem3 (@rlines) {
					printf OP1 "$elem3";
        }
	}

	

	
	
			if ($_ =~m/^END PINS/) {
				$net = 1;
	
			}
	
			if ($net == 1) {
				##printf OP1 "@slines";
				foreach $elem2 (@slines) {
					printf OP1 "$elem2";
				}

				$net = 0;
	
			}


	}
	close(FP1);
	close(OP1);	

}


